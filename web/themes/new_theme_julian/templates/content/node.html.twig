{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}
<article{{ attributes }}>

    {#{ dump(view_mode) }#}
    
    {% if view_mode == 'highlander_display_modes_news_julian' %}
    <div class="node-container">
        <div class="column text-content">

          <div class="highlander-tags tags">
            <div>
              <span id="m1751-1750-1752" class="highlander-span">
                <strong>
                  {{ node.field_tags_news_julian.entity.name.value}}
                </strong>
              </span>
            </div>
          </div>

          <div>
              {% if label and not page %}
                  <h2{{ title_attributes }} class="title">
                      <a href="{{ url }}" rel="bookmark">{{ label }}</a>
                  </h2>
              {% endif %}
          </div>
          <div>
              {{ node.body.value|striptags |slice(0, 180)  }} ... 
          </div>
        </div>
        <div class="column thumbnail-content">
            
            {% set imagestyle = {
              '#theme':      'image_style',
              '#style_name': 'large',
              '#uri':        node.field_thumbnail.entity.uri.value,
              '#alt':        node.field_thumbnail.alt,
              '#attributes': { class: 'swiper-image' },
            } %}
            {{ imagestyle }}
        </div>
    </div>

    {% elseif view_mode == 'teaser_news_julian' %}
      <div class="card">

        <div class="content-tags">
          <div>
            <span class="content-span">
              <strong>
                {{ node.field_category.entity.name.value}}
              </strong>
            </span>
          </div>
        </div>

        {% if label and not page %}
          <h2{{ title_attributes }} class="title">
              <a href="{{ url }}" rel="bookmark">
                {{ label |slice(0, 20)}}...
              </a>
          </h2>
        {% endif %}
      </div>
    {% elseif view_mode == 'secundary_display_modes_news_julian' %}
      <div class="secundary-container">

        <div class="secundary-column secundary-column-1">
          <div class="secondary-tags tags">
            <div>
              <span class="secondary-span">
                <strong>
                  {{ node.field_category.entity.name.value}}
                </strong>
              </span>
            </div>
          </div>
          <div>
            <strong>
              <a href="{{ url }}" rel="bookmark">
                {{ node.body.value|striptags |slice(0, 50)  }}
              </a>
            </strong>
          </div>
        </div>
          
        <div class="secundary-column secundary-column-2">
          {% set imagestyle = {
              '#theme':      'image_style',
              '#style_name': 'medium',
              '#uri':        node.field_thumbnail.entity.uri.value,
              '#alt':        node.field_thumbnail.alt,
              '#attributes': { class: 'swiper-image' },
          } %}
          {{ imagestyle }}
        </div>
      </div>
    {% endif %}
   
</article>
